version: '3.8'

services:
  postgres_db:
    image: postgres:17-alpine
    container_name: lifeos_postgres_prod
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - lifeos_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3

  user_auth_service:
    build:
      context: ./apps/user-auth-service
      dockerfile: Dockerfile
      target: production
    container_name: lifeos_user_auth_prod
    restart: always
    ports:
      - "3001:3000"
    environment:
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres_db:5432/${POSTGRES_DB}?schema=public"
      JWT_SECRET: ${JWT_SECRET}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_CALLBACK_URL: ${GOOGLE_CALLBACK_URL}
      NODE_ENV: production
      PORT: 3000
    depends_on:
      postgres_db:
        condition: service_healthy
    networks:
      - lifeos_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  api_gateway:
    build:
      context: ./apps/api-gateway
      dockerfile: Dockerfile
      target: production
    container_name: lifeos_api_gateway_prod
    restart: always
    ports:
      - "3000:3000"
    environment:
      USER_AUTH_SERVICE_URL: http://user_auth_service:3000
      FRONTEND_URL: ${FRONTEND_URL}
      NODE_ENV: production
      PORT: 3000
    depends_on:
      user_auth_service:
        condition: service_healthy
    networks:
      - lifeos_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data_prod:
    driver: local

networks:
  lifeos_network:
    driver: bridge 